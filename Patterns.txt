For a team problem,
you can take middle as j and then use two loops separately
first finding elements at left and second at right 
to j

This is also pattern

In water container problem,
height we have to take minimum between two pairs

like 8,1 are values

indexes will give us width like i - j and taking abs value
and secondly

so what we will do.

Move element that is short and keep large for height.
So, at last we will have container.

 def maxArea(self, height: List[int]) -> int:
        area = -10000
        count = len(height)
        i = 0
        j = count - 1

        while i <= j:
            width = abs(i-j)
            heigh = min(height[i],height[j])
            area = max(area, width*heigh)
            if height[i] < height[j]:
                i+=1
            else:
                j-=1
        return area